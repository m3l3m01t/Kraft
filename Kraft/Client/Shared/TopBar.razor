@inherits BaseContainerComponent

<div class="container-fluid p-2">
    <Breadcrumb>
        @{
            <BreadcrumbItem>
                <BreadcrumbLink To="@BaseUrl">Home</BreadcrumbLink>
            </BreadcrumbItem>
        }

        @for (var idx = 0; idx < Items.Length; idx++)
        {
            var item = Items[idx];
            var link = string.Join('/', Items, 0, idx + 1);
            var b = (idx == Items.Length - 1);
            Console.WriteLine("{0}: {1} => {2}", idx, item, link);
            <BreadcrumbItem Active="@b">
                <BreadcrumbLink To="@link">@item</BreadcrumbLink>
            </BreadcrumbItem>
        }
        <li class="nav-item dropdown ml-auto">
            <a class="nav-link pr-0" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <div class="media align-items-center">
                    <span class="avatar avatar-sm rounded-circle">
                        <img alt="Image placeholder" src="../assets/img/theme/team-4.jpg">
                    </span>
                    <div class="media-body  ml-2  d-none d-lg-block">
                        <span class="mb-0 text-sm  font-weight-bold">John Snow</span>
                    </div>
                </div>
            </a>
        </li>
    </Breadcrumb>

</div>

@*
    <div class="container-fluid">
        <div class="navbar navbar-expand">
            <ul class="navbar-nav align-items-center">
                <Breadcrumb>
                    @{
                        <BreadcrumbItem>
                            <BreadcrumbLink To="@BaseUrl">Home</BreadcrumbLink>
                        </BreadcrumbItem>
                    }

                    @for (var idx = 0; idx < Items.Length; idx++)
                    {
                        var item = Items[idx];
                        var link = string.Join('/', Items, 0, idx + 1);
                        var b = (idx == Items.Length - 1);
                        Console.WriteLine("{0}: {1} => {2}", idx, item, link);
                        <BreadcrumbItem Active="@b">
                            <BreadcrumbLink To="@link">@item</BreadcrumbLink>
                        </BreadcrumbItem>
                    }
                </Breadcrumb>
            </ul>

            <ul class="navbar-nav align-items-center ml-md-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="ni ni-bell-55"></i>
                    </a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="ni ni-ungroup"></i>
                    </a>
                </li>
            </ul>
            <ul class="navbar-nav align-items-center ml-md-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link pr-0" href="#" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <div class="media align-items-center">
                            <span class="avatar avatar-sm rounded-circle">
                                <img alt="Image placeholder" src="../assets/img/theme/team-4.jpg">
                            </span>
                            <div class="media-body  ml-2  d-none d-lg-block">
                                <span class="mb-0 text-sm  font-weight-bold">John Snow</span>
                            </div>
                        </div>
                    </a>
                </li>
            </ul>
        </div>
    </div>
*@
@*
<nav aria-label="breadcrumb" class="container-fluid m--2 p--2">
    <ol class="breadcrumb p--2">
        <li class="breadcrumb-item"><a href="@BaseUrl">Home</a></li>

        @for (var idx = 0; idx < Items.Length; idx++)
        {
            var item = Items[idx];
            var link = BaseUrl + string.Join('/', Items, 0, idx + 1);
            var active = (idx == Items.Length - 1) ? "active" : null;

            Console.WriteLine("{0}: {1} => {2}", idx, item, link);
            <li class="breadcrumb-item @active">
                <a ref="@link">@item</a>
            </li>
        }

        <li class="ml-auto">
            <li class="nav-item dropdown">
                <a class="nav-link px-2" href="#" role="button" data-toggle="dropdown"
                   aria-haspopup="true" aria-expanded="false">
                    <div class="media align-items-center">
                        <span class="avatar avatar-sm rounded-circle">
                            <img alt="Image placeholder" src="../assets/img/theme/team-4.jpg">
                        </span>
                        <div class="media-body  ml-2  d-none d-lg-block">
                            <span class="mb-0 text-sm font-weight-bold">John Snow</span>
                        </div>
                    </div>
                </a>
            </li>
        </li>
    </ol>
</nav>
*@

@code {
    [Parameter]
    public string[] Items { get; set; }

    [Parameter]
    public string BaseUrl { get; set; }

    protected override Task OnParametersSetAsync()
    {
        Console.WriteLine("BaseUrl {0}", BaseUrl);

        return base.OnParametersSetAsync();
    }
    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}